 //Show a loading window before showing the main window.
            Thread newWindowThread = new Thread(() =>
            {
                LBJ w = new LBJ();
                w.ShowDialog();
                
                //try
                //{
                //    System.Windows.Threading.Dispatcher.Run();
                //}
                //catch(Exception e)
                //{
                //    ;
                //}

            });
            newWindowThread.SetApartmentState(ApartmentState.STA);
            newWindowThread.IsBackground = true;
            newWindowThread.Start();

            Thread.Sleep(3000);
            InitializeComponent();

            System.Windows.Threading.Dispatcher.FromThread(newWindowThread).InvokeShutdown();

https://www.keyence.co.jp/support/user/controls/plc/video/beginners/

陳くん　お疲れ様です。　GWに台湾帰るのですね！親切なお誘いありがとうございます。ただ、今回は家族と一緒なので、遠慮しておきます。（子どもたち、人見知りなんです。。笑）　陳くんも、せっかくのお休みなので、ご家族とゆっくりなさってください。　　

精度監視修正
3/8 eLearning
小禮物送勇哥
Check cognex reply finish report ppt
Check China reply
共済
保険
新加坡


1. 在图中的inline runtime system 启动前已存在的图片1,2,3只要能在一小时内被检查完并将检查结果上传到CIM即可吗？


 2. 如果优先检查inline runtime system 启动前已存在的图片1,2,3，完成后才检查刚刚拍摄的图片4

 （也就是说，可检查所有资料夹中的图片，但无法即时检查刚刚拍摄的图片）,这样的流程可行吗？

ご担当者さま
年金共済悠々プランに参加したいのですが、明日のｎ時に伺ってもよろしいでしょうか?
hosokawa@murata-union.or.jp




・部門技術對接有哪些措施？
・資訊分享會議是技術上的交流場所，但它們是否被有效利用？
・如何讓資訊分享會不只是一個聆聽的場所，而是引導下一步行動的場所？
・什麼樣的措施可以讓每個人都參與而不是被迫參與，了解彼此的技術，並將其納入路線圖？


//Filewatcher
        private string monitorFolderPath=@"D:\chin\FM5300_MLCC評価\Yolov8で分割した_外内教師画像\分割あり_分類結果_Trial3";

        private System.IO.FileSystemWatcher watcher = null;

        //イベントハンドラ
        private void watcher_Created(System.Object source,
            System.IO.FileSystemEventArgs e)
        {
            //txtBox.Text = "ファイル 「" + e.Name + "」が作成されました。";
            txtBoxContent= "ファイル 「" + e.Name + "」が作成されました。";
            MessageBox.Show("ファイル 「" + e.Name + "」が作成されました。");
            
        }

        

       

        private void StartMonitoringBtn_Click(object sender, RoutedEventArgs e)
        {
            if (watcher != null) return;

            watcher = new System.IO.FileSystemWatcher();
            //監視するディレクトリを指定
            watcher.Path = monitorFolderPath;
            ////最終アクセス日時、最終更新日時、ファイル、フォルダ名の変更を監視する
            //watcher.NotifyFilter =
            //    (System.IO.NotifyFilters.LastAccess
            //    | System.IO.NotifyFilters.LastWrite
            //    | System.IO.NotifyFilters.FileName
            //    | System.IO.NotifyFilters.DirectoryName);
            //すべてのファイルを監視
            watcher.Filter = "*.png";

            //UIのスレッドにマーシャリングする
            //コンソールアプリケーションでの使用では必要ない
            //watcher.SynchronizingObject = this;

            //イベントハンドラの追加
            watcher.Created += new System.IO.FileSystemEventHandler(watcher_Created);

            //subフォルダ内は監視しない
            watcher.IncludeSubdirectories = false;


            //監視を開始する
            watcher.EnableRaisingEvents = true;
            MessageBox.Show("監視を開始しました。");
           

        }

        

        private void StopMonitoringBtn_Click(object sender, RoutedEventArgs e)
        {
            //監視を終了
            watcher.EnableRaisingEvents = false;
            watcher.Dispose();
            watcher = null;
            MessageBox.Show("監視を終了しました。");
        }













///////////////////
https://www.statology.org/pandas-get-rows-not-in-another-dataframe/
#merge two DataFrames and create indicator column
df_all = df1.merge(df2.drop_duplicates(), on=['col1','col2'],
                   how='left', indicator=True)

#create DataFrame with rows that exist in first DataFrame only
df1_only = df_all[df_all['_merge'] == 'left_only']
//////////////////////
public partial class MainWindow : Window, INotifyPropertyChanged
    {
private string _RuntimeFilePath;
        public string RuntimeFilePath
        {
            get { return _RuntimeFilePath; }
            set
            {
                if (_RuntimeFilePath != value)
                {
                    _RuntimeFilePath = value;
                    OnPropertyChanged();
                }
            }
        }


        public event PropertyChangedEventHandler PropertyChanged;
        private void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

public MainWindow()
        {

            

            InitializeComponent();

            DataContext = this;

            RuntimeFilePath = "555";
        }
//////////////////////////////Front
<TextBox x:Name="SoftwareTriggerFreqTextBox" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="105,0,0,41" Width="70" Height="35" Text="{Binding RuntimeFilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" RenderTransformOrigin="2.129,2.035"/>
       
        <TextBox x:Name="SoftwareTriggerFreqTextBox2" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="279,0,0,40.8" Width="70" Height="35" Text="{Binding RuntimeFilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" RenderTransformOrigin="2.129,2.035"/>



・・・・・・・・・・・・・・・
Message = "指定されたカルチャまたはニュートラル カルチャに対して適切なリソースが見つかりませんでした。  \"Example.Runtime.Properties.Resources.resources\" が適切に埋め込まれたか、実行時にアセンブリ \"Inline_Runtime_System\" にリンクされたか、または必要なサテライト アセンブリが読み込まれて完全に署名されていることを確認してください。"


1 分割ソフトにyolov5を適用する
2　分割ソフトで学習用画像を分割する　　　どの画像を学習用画像にしますか？
3　分割された学習画像で分類モデルを作成する
4　分類モデルとyolov5を手動分類ソフトに適用する
5　手動分類ソフトで学習に使われていない画像を分類して評価する

关于Runtime soft 数据上传至CIM商讨，

黄kk提供下列设想,请参考，

设想分成两步：第一是实时解析图像结果发送给AMES, 第二步设备排出时，主动向AMES询问电池的检测结果。
Step 1 :  设备图像Save   -share folder->   Runtime Soft  -http->  AMES DB 
	这里需要确认的是，RUNTIME SOFT是否可以将检测结果实时上传给CIM(AMES)
需要生技协助确认的问题：
1）根据目前测试结果看每张图片的数据处理在百位毫秒级，所以想确认RUNTIME SOFT运行频度从1小时运行一次 改成 每秒一次/实时运行（就是来一张图像就立马解析）？
2）RUNTIME SOFT解析结果除了存入CSV文件，是否可以追加HTTP 请求将结果数据发送给AMES.
类似：http://mdwpmes.co.murata.local/ames/baseDML.do?CELL_ID=XXXXXXXX&RESULT=OK&DATA1=100&DATA2=1000
Step 2 :  设备排出Check  -link->   Gateway PLC -udp>   DA Process  -udp->  设备PLC 
	如果STEP1可以实现的话，AMES侧需要追加一个EVENT，即设备排出时发送EVENT给AMES，AMES返回AI软件的检测结果给设备，设备再根据结果决定电池的排出。

上周8/23在MMC我已经向陈san简要说明了，请在9/6会议上再详细商讨，
以上
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
岳san您好, 想請問下方關於您email中所說的內容的意思
1. "第二步设备排出时，主动向AMES询问电池的检测结果。"中的 "设备排出" 是什麼意思呢?
2. "如果STEP1可以实现的话，AMES侧需要追加一个EVENT，即设备排出时发送EVENT给AMES，AMES返回AI软件的检测结果给设备，设备再根据结果决定电池的排出。"
中的 "电池的排出" 是什麼意思呢?
謝謝您.
3."DA Process"指的是資料分析嗎?
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Notice：Fix 放電　with 排出の意味

Runtime SystemデータのCIM (AMES)へのアップロードに関するディスカッション、
黄さん(CIM (AMES)の担当者)は次のアイデアを提供しています。参照してください。

このアイデアは 2 つのステップに分かれています。
Step１は、画像結果をリアルタイムで分析して CIM (AMES) に送信することです。
Step２は、機器が放電したときにバッテリーの検査結果を CIM (AMES) に問い合わせることです。

Step 1 :  検査対象の画像保存   -share folder（経由）->   Runtime System  -http（経由）->  CIM (AMES) DB 
ここで確認する必要があるのは、Runtime System が検査結果をリアルタイムに CIM (AMES) にアップロードできるかどうかです。

P623がサポートできるかどうかを確認したいこと：
1) 現在のRuntime System検査では、1 枚の画像のデータ処理が数百ミリ秒レベルであるため、Runtime Systemの実行頻度が 1 時間に 1 回から 1 秒に 1 回/実数に変更されたことを確認したい。時間操作 (つまり、画像をリアルタイムに分析する) 。
2) Runtime Systemの解析結果を CSV ファイルに保存するだけでなく、結果データを CIM (AMES) に送信するための HTTP リクエスト機能を追加できるか。
例えば、次のような HTTP リクエストで結果データを CIM (AMES) に送信: 
http://mdwpmes.co. Murata.local/ames/baseDML.do?CELL_ID=XXXXXXXX&RESULT=OK&DATA1=100&DATA2=1000



Step 2 : 機器排出チェック -link（経由）-> ゲートウェイ PLC  -udp（経由）->   DA Process  -udp（経由）->  設備PLC 
STEP１が実現できる場合、CIM (AMES)側でEVENTを追加する必要があります。
つまり、デバイスの放電時にEVENTがCIM (AMES)に送信され、CIM (AMES)はRuntime Systemの検査結果をデバイスに返し、デバイスは、その結果に基づいてバッテリーを放電することを決定します。

先週8/23にMMCで陳さんに簡単に説明しましたが、詳しくは9/6の会議で話し合う予定です。
以上

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=
升降圖 ， 當時評價良品圖和現在評價良品圖的差異對照 ，本物枚数ある程度ある場合、多様性を増やすことができる



C#で画像を描いてみた（WPFでWritableBitmap編）
https://water2litter.net/rye/post/c_graphic_draw_writablebitmap/

Converting WriteableBitmap to Bitmap in C#
https://stackoverflow.com/questions/17298034/converting-writeablebitmap-to-bitmap-in-c-sharp

Wrietablebitmap BGR in a byte array
W×H×4
https://www.peliphilo.net/archives/2313








C# Await Tutorial
Good await tutorial 

https://learn.microsoft.com/en-us/dotnet/visual-basic/programming-guide/concepts/async/




Control flow in asynchronous programming
    public async Task DoSomethingAsync() {
        Console.WriteLine("Start");
        await Task.Delay(1000);
        Console.WriteLine("End");
    }
    public async Task Main() {
        Console.WriteLine("Before");
        await DoSomethingAsync();
        Console.WriteLine("After");
    }

Result:

    Before
    Start
    End
    After



7 ways to start a task in C#

https://www.spaceclick.com/blog/7-ways-to-create-tasks-in-dot-net-c-sharp/

Create a task without starting it right away

Using Lambda with a method:

    Task task = new Task( () => MyMethod() );
    task.Start();


Create a task and start it right away

Using Run (.NET 4.5)

    public async Task DoStuff()
    {
    await Task.Run(() => MyMethod());
    }

If you don't need to wait for the task in the DoStuff()

    public void DoStuff()
    {
       Task.Run(() => MyMethod());
    }


Get return value from Task.Run
    string urlContents = await Task.Run(() => RunLongTask(i.ToString(CultureInfo.InvariantCulture)));

The string result is stored in the task that represents the completion of the RunLongTask method. The await operator retrieves the result from `t`he task. The assignment statement assigns the retrieved result to `urlContents`.



    private async Task<string> ABCAsync(string someParam)
    {
        //adding .ConfigureAwait(false) may NOT be what you want but google it.
        return await Task.Run(() => SomeObj.SomeMethodAsync(someParam)).ConfigureAwait(false);
    }

ABCAsync returns a Task(Of TResult) where TResult is a string.
The task represents the ongoing process for the call to `ABCAsync`, with a commitment to produce an actual string value when the work is complete.



You can work on other independent works after starting a task, and await it to finish when you need its return value to continue the program.

    Task<string> LongTask = new Task( () => MyMethod() );
    LongTask.Start();
    
    //You can continue with other work that doesn't depend on the final result from LongTask.
    DoIndependentWork();
    
    //When you have run out of work that you can do without a result from LongTask.
    //Await it to finish
    string urlcontent = await LongTask
    



Wait for multiple tasks : WaitAll vs WhenAll

`Task.WaitAll` blocks the current thread until everything has completed.
`Task.WhenAll` returns a task which represents the action of waiting until everything has completed.
That means that from an async method, you can use:

    await Task.WhenAll(tasks);

... which means your method will continue when everything's completed, but you won't tie up a thread to just hang around until that time.

Task.WaitAll example:
    public async Task UnresultTaskMethod()
    { 
       var task1 = AsyncMethod1();
       var task2 = AsyncMethod2();
    
       // This is not awaitable, you're blocking the current thread
       Task.WaitAll(task1, task2);
     
       // Here you are sure both task1 and task2 are completed
    }



Task.WhenAll example:
    private async Task ABCAsync(string someParam)
    {
        //Show the marquee to indicate it's waiting for the process to finish
        var box = new Form2();
        Form2.Show();
    
        //Do the process
        var BroadCategory = new List<string>();
        BroadCategory.Add("123");
        BroadCategory.Add("1234");
        // ///////////////////Replace parallel for in kannsihhanntei btn event with this structure, 
        // //only Replace the Heavy process part would do the work////////////////////////
        var taskArray = new Task[BroadCategory.Count];
        for (int i = 0, i <= BroadCategory.Count - 1;  i++)
        {
            taskArray[i] = Task.Run(() =>
            {
                    // Heavy process
                Console.WriteLine("in tasks thread ID:" + Environment.CurrentManagedThreadId);
                System.Threading.Thread.Sleep(2000);
            });
        }
        // Asynchronously wait for all tasks to finish so that the caller function can continue its work.
        await(Task.WhenAll(taskArray));
    
        //Close the marquee window to indicate the process is done.
        Form2.Close();
    }

----------------------------------------------------

貼上狀態2的confusion map

另作一個ppt 說明偽のみと本物のみ Resnet18皆比EfficientB3好

確認假+真能否solve只有其中之一能解的 以及 能否solve雙方都不能解的



'///////////////////Add ①"Await" Keyword followed by ②MsgBox("自動削除が完成しました。") to startDeleteOldData/////////
        Await Task.Run(Sub()
                           'Heavy process
                           Console.WriteLine("in single task thread ID:" & System.Environment.CurrentManagedThreadId)
                           Threading.Thread.Sleep(2000)
                       End Sub)
        MsgBox("自動削除が完成しました。")
'//////////////////
----------------------------------------------------
 '///////////////////Replace parallel for in kannsihhanntei btn event with this structure, 
only Replace ①the Heavy process and ②camNoArray with real Array would do the work////////

        Dim taskArray(camNoArray.Count - 1) As Task
        For i As Integer = 0 To camNoArray.Count - 1
            taskArray(i) = Task.Run(Sub()
                                        'Heavy process
                                        Console.WriteLine("in tasks thread ID:" & System.Environment.CurrentManagedThreadId)
                                        Threading.Thread.Sleep(2000)
                                    End Sub)
        Next
        'Asynchronously wait for all tasks to finish
        Await Task.WhenAll(taskArray)
        '///////////////////////////////////////////


市販ツール
Dall E 2
https://openai.com/dall-e-2

Imagen
Generate an image from text 
https://imagen.research.google/




Open source
画像を操る~photoshop
Drag your GAN code released in June
https://github.com/XingangPan/DragGAN

Stable diffusion 
Image より軽量
Generate an image from text 
https://stablediffusionweb.com/



コード： https://github.com/CompVis/stable-diffusion
https://huggingface.co/spaces/stabilityai/stable-diffusion
論文
https://arxiv.org/abs/2112.10752より転載

Dreambooth
https://arxiv.org/abs/2208.12242 より転載
コード： https://github.com/smy20011/dreambooth-gui


//////////////
Vb show csv
https://www.c-sharpcorner.com/article/how-to-upload-browse-and-show-csv-file-information-in-asp-net-gridview/


https://www.csvreader.com/code/vb/gridview.php



https://stackoverflow.com/questions/33494332/reading-and-displaying-data-from-csv-file-on-windows-form-application-using-c-sh





------------------------------------------
def splitByCamNo(df):
    rowIndex=0
    eachCamNo_Rows = dict()
    for _, values in df['フルパス'].items():
        infos=values.split('\\')
        camNo=infos[len(infos)-4]
        if camNo in eachCamNo_Rows:
            eachCamNo_Rows[camNo].append(rowIndex)
        else :
            eachCamNo_Rows[camNo]=[rowIndex]
        #increment row index
        rowIndex+=1
    return eachCamNo_Rows





# Defining main function
def main():
    #For test
    df = pd.read_csv("./Mixed.csv",index_col=0,encoding='shift-jis')
    
    

    
    #Do the following after extracting the data within the timeframe-------------
    
    #Split data according to camera number in 'フルパス'
    eachCamNo_Rows=splitByCamNo(df)
    for key,value in eachCamNo_Rows.items():
            subDf=df.iloc[rowIndex]
            #do the accuracy check process with subDf here
            #...


------------------------------------------------------------
'Create a line of btns
        Dim BtnTitleList As New List(Of String)({"カメラ３素体部", "カメラ３LGA部", "カメラ4素体部", "カメラ4LGA部"})
        Dim eachCharWidth = 15
        Dim startX = 10

        For i As Integer = 0 To BtnTitleList.Count - 1
            Dim btnWidth = BtnTitleList(i).Length() * eachCharWidth

            CreateBtn(startX, btnWidth, BtnTitleList(i))

            startX += btnWidth

        Next
///////////////////////////////////

'Create a line of btns
    Private Sub CreateBtn(x As Integer, btnWidth As Integer, title As String)
        Dim newButton As New Button
        Me.Controls.Add(newButton)
        newButton.Text = title
        newButton.Location = New Point(x, 10)
        newButton.Size = New Size(btnWidth, 20)



    End Sub

VB.netにおいて、プログレスバーの作成方法
https://www.fenet.jp/dotnet/column/language/4631/
